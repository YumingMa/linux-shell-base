#!/usr/bin/env bash
# 
# Bash file and directory utilities.
# 

# Extraction
# --------------------------------------------
  # Extract a the extension from a file name by getting all text after the last
  # or second to last dot if it exists.
  # Arguments:
  #   1. Filename
  extractFileExtension() {
    if [[ "${1}" = *'.'* ]]; then
      local fn="${1%.*}" ext="${1##*.}"
      [[ "${fn}" = *'.'* ]] && ext="${fn##*.}.${ext}"
      echo "${ext}"
    fi
  }

# Other
# --------------------------------------------
  # Return the next numbered file name. E.g., if "./mbg.txt" exists, return
  # "mbg_2.txt"; if "./mbg.txt", "./mbg_2.txt" and "./mbg_23.txt" exist, return
  # "mbg_24.txt".
  # Arguments:
  #   1. Filename
  #   2. (Optional) Path to search in (default is current)
  getIncrementedFilename() {
    local filen="${1}"
    [ "$#" -ge 2 ] && local path="${2}" || local path='.'
    local fileExt="$(extractFileExtension "${filen}")"
    [ -n "${fileExt}" ] && fileExt=".${fileExt}"
    local fileBsn="${1%${fileExt}*}"
    if [ "$(ls -Ad "${path}/${filen}" 2>/dev/null)" ]; then
      filen="${fileBsn}_2${fileExt}" # often won't need to check after second
      local mtchFilens=($(ls -Ad "${path}/${fileBsn}_"[0-9]*"${fileExt}" \
          2>/dev/null))
      if [ ${#mtchFilens[@]} -gt 0 ]; then
        local num=2
        for mf in "${mtchFilens[@]}"; do
          local mf="${mf##*/}"
          local mfBsn="${mf%${fileExt}*}"
          local mfNum="${mfBsn##*_}"
          # If using directory names, dos line endings must be removed for mfNum
          # or arithmetic operations will result in a syntax error. Note: using
          # regex as "${mfNum//$'\r'/}" and other operations do not work.
          [[ ${mfNum} =~ [0-9]* ]] && mfNum="${BASH_REMATCH[0]}"
          if [ ${mfNum} -gt ${num} ]; then
            num=${mfNum}
          fi
        done
        filen="${fileBsn}_$((num + 1))${fileExt}"
      fi
    fi
    echo "${filen}"
  }



# ============================================================
#   REFERENCE
# ============================================================
# 
#   isDirectoryEmpty() {
#     if [ "$(ls -A "${1}")" ]; then return 0; else return 1; fi
#   }
# 

