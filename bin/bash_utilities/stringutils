#!/usr/bin/env bash
# 
# Bash string utilities
# 

# General
# --------------------------------------------
  # Repeat text N number of times.
  # Arguments:
  #   1. Text
  #   2. Repeat count
  # Options:
  #   -m --max    max repeat count
  repeatText() {
    if [[ "${1}" = '-m' || "${1}" = '--max' ]]; then
      if [[ "${2}" =~ ^[0-9]+$ ]]; then
        local RPT_COUNT_MAX="${2}"; shift 2
      else
        echo "repeatText: value for option ${1} must be a number"
        return 1
      fi
    fi
    if [ "$#" -eq 2 ]; then
      if [[ "${2}" =~ ^[0-9]+$ && "${2}" -gt 0 ]]; then
        local rptCnt="${2}"
        if [[ -n "${RPT_COUNT_MAX}" && "${RPT_COUNT_MAX}" -ge 0 ]]; then
          [ "${rptCnt}" -gt "${RPT_COUNT_MAX}" ] && rptCnt="${RPT_COUNT_MAX}"
        fi
        for i in $(seq 1 ${rptCnt}); do
          local retTxt+="${1}"
        done
      fi
    elif [ "$#" -eq 1 ]; then
      retTxt="${1}"
    fi
    echo "${retTxt}"
  }

  # Prepend the given prefix to all delimited strings in the full string. E.g.,
  # echo "$(prependToDelimitedStrings "semicolon;is;the;delimiter" ';' '<<')"
  # => "<<semicolon;<<is;<<the;<<delimiter"
  # Arguments:
  #   1. String containing delimiters
  #   2. Delimiter
  #   3. Prefix
  prependToDelimitedStrings() {
    [ "$#" -ne 3 ] && echo "${1}" && return 1
    local retTxt
    IFS="${2}"; for str in ${1}; do
        retTxt+="${3}${str}${2}"; done; unset IFS
    [ ! "${1: -1}" = "${2}" ] && retTxt="${retTxt%${2}}"
    echo "${retTxt}"
  }
